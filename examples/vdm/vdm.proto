syntax = "proto3";
package vdm;

// Tag values (1-15) take one byte to encode, including the identifying number and the filed's type. They're reserved for very frequently occuring fields!
// Tag values (16-2047) take two bytes.

// Data exchanged between device and server are listed as follows. They can be serialized in Google Protocol Buffers except Firmware Over-The-Air as MCU firmware image is too big to fit into MCU's memory.
// - Values: Value::Values correspond to definitions in 'VDM Values' document
// - Functional Test Result:
// - Values configuration:
// - Settings:
// - Commands:
// - Firmware Over-The-Air:

message Value {
	Values values = 1;
	oneof imei_present {
		string imei = 2;
	}
	oneof ts_present {
		uint64 ts = 3;
	}

	// Following fields are kept to be backward compatible with first generation device

	oneof device_id_present {
		uint64 device_id = 2001;
	}
	oneof voltage_present {
		uint32 voltage = 2002;
	}
	oneof adc_present {
		uint32 adc = 2003;
	}
	oneof rssi_present {
		uint32 rssi = 2004;
	}
	oneof data_present {
		string data = 2005;
	}
	oneof signal_strength_present {
		uint32 signal_strength = 2006;
	}

	message Values {
		oneof core_msg_id_present {
			uint32 core_msg_id = 1;
		}
		oneof obd_rpm_present {
			uint32 obd_rpm = 2;
		}
		oneof obd_speed_present {
			uint32 obd_speed = 3;
		}
		oneof obd_air_flow_rate_present {
			uint32 obd_air_flow_rate = 4;
		}
		oneof obd_running_voltage_present {
			uint32 obd_running_voltage = 5;
		}
		ObdTripStatistics obd_it = 6;
		GpsPosition gps_position = 7;
		oneof gps_sats_used_present {
			uint32 gps_sats_used = 8;
		}
		GpsDop gps_dop = 9;
		oneof gps_course_present {
			uint32 gps_course = 10;
		}
		oneof gps_speed_present {
			uint32 gps_speed = 11;
		}
		repeated Batch batch = 12;

		// CORE (16-79)

		CoreSoftwareVersion core_software_version = 16;
		oneof core_reset_reason_present {
			uint32 core_reset_reason = 17;
		}
		oneof core_power_state_present {
			uint32 core_power_state = 18;
		}
		oneof core_osc_present {
			uint32 core_osc = 19;
		}
		oneof core_debug_present {
			string core_debug = 20;
		}

		// OBD-II (80-1359)

		oneof obd_mil_present {
			uint32 obd_mil = 80;
		}
		oneof obd_coolant_temperature_present {
			int32 obd_coolant_temperature = 81;
		}
		oneof obd_manifold_pressure_present {
			uint32 obd_manifold_pressure = 82;
		}
		oneof obd_throttle_present {
			uint32 obd_throttle = 83;
		}
		oneof obd_distance_with_mil_present {
			uint32 obd_distance_with_mil = 84;
		}
		oneof obd_fuel_level_present {
			uint32 obd_fuel_level = 85;
		}
		oneof obd_vin_present {
			string obd_vin = 86;
		}
		repeated uint32 obd_current_dtcs = 87;
		repeated uint32 obd_pending_dtcs = 88;
		repeated uint32 obd_permanent_dtcs = 89;
		ObdTripStatistics obd_eot = 90;
		oneof obd_engine_state_present {
			uint32 obd_engine_state = 91;
		}
		oneof obd_protocol_present {
			uint32 obd_protocol = 92;
		}
		oneof obd_intake_temperature_present {
			int32 obd_intake_temperature = 93;
		}
		oneof obd_engine_load_present {
			uint32 obd_engine_load = 94;
		}
		oneof obd_short_term_fuel_trim1_present {
			int32 obd_short_term_fuel_trim1 = 95;
		}
		oneof obd_short_term_fuel_trim2_present {
			int32 obd_short_term_fuel_trim2 = 96;
		}
		oneof obd_commanded_equivalence_ratio_present {
			uint32 obd_commanded_equivalence_ratio = 97;
		}
		ObdSot obd_sot = 98;
		oneof obd_sleep_voltage_present {
			uint32 obd_sleep_voltage = 99;
		}
		ObdTripStatistics obd_pt = 100;
		oneof obd_odometer_present {
			uint32 obd_odometer = 101;
		}
		oneof obd_speed_calc_odometer_present {
			uint32 obd_speed_calc_odometer = 102;
		}
		oneof obd_dtc_calc_odometer_present {
			uint32 obd_dtc_calc_odometer = 103;
		}
		oneof obd_distance_without_dtcs_present {
			uint32 obd_distance_without_dtcs = 104;
		}
		oneof obd_debug_present {
			string obd_debug = 105;
		}

		// GPS (1360-1423)

		oneof gps_fix_type_present {
			uint32 gps_fix_type = 1360;
		}
		oneof gps_mode_present {
			uint32 gps_mode = 1361;
		}
		GpsStandby gps_standby = 1362;
		oneof gps_gnss_present {
			uint32 gps_gnss = 1363;
		}
		oneof gps_software_version_present {
			string gps_software_version = 1364;
		}
		oneof gps_upgrade_state_present {
			uint32 gps_upgrade_state = 1365;
		}
		oneof gps_debug_present {
			string gps_debug = 1366;
		}

		// Batch (1424-1439)

		// Accelerometer (1440-1503)

		oneof acc_tow_present {
			uint32 acc_tow = 1440;
		}
		oneof acc_direction_recognized_present {
			uint32 acc_direction_recognized = 1441;
		}
		repeated AccAcceleration acc_acceleration = 1442;
		oneof acc_debug_present {
			string acc_debug = 1443;
		}

		message CoreSoftwareVersion {
			// Software variant
			oneof variant_present {
				uint32 variant = 1;
			}
			// Major version number
			oneof major_present {
				uint32 major = 2;
			}
			// Minor version number
			oneof minor_present {
				uint32 minor = 3;
			}
			// Patch version number
			oneof patch_present {
				uint32 patch = 4;
			}
			// Build ID
			oneof build_present {
				uint32 build = 5;
			}
			// Build timestamp
			oneof timestamp_present {
				uint32 timestamp = 6;
			}
			// Detailed version information
			oneof details_present {
				string details = 7;
			}
		}

		message ObdSot {
			// Last sleep voltage when engine start
			oneof off_voltage_present {
				uint32 off_voltage = 1;
			}
			// First running voltage when engine start
			oneof on_voltage_present {
				uint32 on_voltage = 2;
			}
			// Duration of sleep time
			oneof total_time_present {
				uint32 total_time = 3;
			}
		}

		message ObdTripStatistics {
			oneof idle_time_present {
				uint32 idle_time = 1;
			}
			oneof distance_present {
				uint32 distance = 2;
			}
			oneof total_fuel_cons_present {
				uint32 total_fuel_cons = 3;
			}
			oneof max_speed_present {
				uint32 max_speed = 4;
			}
			oneof total_time_present {
				uint32 total_time = 5;
			}
			oneof idle_time_combustion_present {
				uint32 idle_time_combustion = 6;
			}
			oneof distance_combustion_present {
				uint32 distance_combustion = 7;
			}
			oneof total_energy_cons_present {
				uint32 total_energy_cons = 8;
			}
			oneof total_time_combustion_present {
				uint32 total_time_combustion = 9;
			}
		}

		message GpsPosition {
			oneof lat_present {
				int32 lat = 1;
			}
			oneof lon_present {
				int32 lon = 2;
			}
			oneof alt_present {
				int32 alt = 3;
			}
		}

		message GpsDop {
			oneof hdop_present {
				uint32 hdop = 1;
			}
			oneof vdop_present {
				uint32 vdop = 2;
			}
			oneof pdop_present {
				uint32 pdop = 3;
			}
		}

		message GpsStandby {
			oneof lat_present {
				int32 lat = 1;
			}
			oneof lon_present {
				int32 lon = 2;
			}
			oneof alt_present {
				int32 alt = 3;
			}
			oneof course_present {
				uint32 course = 4;
			}
			oneof speed_present {
				uint32 speed = 5;
			}
			oneof sats_used_present {
				uint32 sats_used = 6;
			}
			oneof fix_type_present {
				uint32 fix_type = 7;
			}
			oneof mode_present {
				uint32 mode = 8;
			}
			GpsDop dop = 9;
		}

		message Batch {
			// OBD-II

			oneof obd_rpm_present {
				uint32 obd_rpm = 1;
			}
			oneof obd_speed_present {
				uint32 obd_speed = 2;
			}
			oneof obd_it_distance_present {
				uint32 obd_it_distance = 3;
			}
			oneof obd_it_total_time_present {
				uint32 obd_it_total_time = 4;
			}

			// GPS

			oneof gps_lat_present {
				int32 gps_lat = 5;
			}
			oneof gps_lon_present {
				int32 gps_lon = 6;
			}
			oneof gps_alt_present {
				int32 gps_alt = 7;
			}
			oneof gps_course_present {
				uint32 gps_course = 8;
			}
			oneof gps_hdop_present {
				uint32 gps_hdop = 9;
			}
			oneof gps_vdop_present {
				uint32 gps_vdop = 10;
			}
			oneof gps_pdop_present {
				uint32 gps_pdop = 11;
			}
			oneof gps_speed_present {
				uint32 gps_speed = 12;
			}

			// Accelerometer

			oneof acc_rate_present {
				uint32 acc_rate = 13;
			}
			oneof acc_angle_present {
				int32 acc_angle = 14;
			}
			oneof acc_rate_x_present {
				int32 acc_rate_x = 15;
			}
			oneof acc_rate_y_present {
				int32 acc_rate_y = 16;
			}
		}

		message AccAcceleration {
			oneof type_present {
				uint32 type = 1;
			}
			oneof rate_present {
				uint32 rate = 2;
			}
			oneof gps_lat_present {
				int32 gps_lat = 3;
			}
			oneof gps_lon_present {
				int32 gps_lon = 4;
			}
			oneof gps_alt_present {
				int32 gps_alt = 5;
			}
			oneof obd_it_total_time_present {
				uint32 obd_it_total_time = 6;
			}
			oneof gps_pdop_present {
				uint32 gps_pdop = 7;
			}
			oneof gps_hdop_present {
				uint32 gps_hdop = 8;
			}
			oneof gps_vdop_present {
				uint32 gps_vdop = 9;
			}
		}
	}
}

message FunctionalTest {
	oneof imei_present {
		string imei = 1;
	}
	oneof iccid_present {
		string iccid = 2;
	}
	oneof thing_id_present {
		string thing_id = 3;
	}
	oneof ts_present {
		uint64 ts = 4;
	}
	CoreSoftwareVersion core_software_version = 5;
	oneof result_present {
		uint32 result = 6;
	}
	oneof obd_protocol_present {
		uint32 obd_protocol = 7;
	}
	GpsPosition gps_position = 8;
	oneof gps_fix_type_present {
		uint32 gps_fix_type = 9;
	}
	
	message CoreSoftwareVersion {
		// Software variant
		oneof variant_present {
			uint32 variant = 1;
		}
		// Major version number
		oneof major_present {
			uint32 major = 2;
		}
		// Minor version number
		oneof minor_present {
			uint32 minor = 3;
		}
		// Patch version number
		oneof patch_present {
			uint32 patch = 4;
		}
		// Build ID
		oneof build_present {
			uint32 build = 5;
		}
		// Build timestamp
		oneof timestamp_present {
			uint32 timestamp = 6;
		}
		// Detailed version information
		oneof details_present {
			string details = 7;
		}
	}

	message GpsPosition {
		oneof lat_present {
			int32 lat = 1;
		}
		oneof lon_present {
			int32 lon = 2;
		}
		oneof alt_present {
			int32 alt = 3;
		}
	}
}

message ValuesConfiguration {
	// Should be in same order as fields in message Value!

	Element core_msg_id = 1;
	Element obd_rpm = 2;
	Element obd_speed = 3;
	Element obd_air_flow_rate = 4;
	Element obd_running_voltage = 5;
	Element obd_it = 6;
	Element gps_position = 7;
	Element gps_stas_used = 8;
	Element gps_dop = 9;
	Element gps_course = 10;
	Element gps_speed = 11;
	Element batch = 12;

	// CORE (16-79)

	Element core_software_version = 16;
	Element core_reset_reason = 17;
	Element core_power_state = 18;
	Element core_osc = 19;
	Element core_debug = 20;

	// OBD-II (80-1359)

	Element obd_mil = 80;
	Element obd_coolant_temperature = 81;
	Element obd_manifold_pressure = 82;
	Element obd_throttle = 83;
	Element obd_distance_with_mil = 84;
	Element obd_fuel_level = 85;
	Element obd_vin = 86;
	Element obd_current_dtcs = 87;
	Element obd_pending_dtcs = 88;
	Element obd_permanent_dtcs = 89;
	Element obd_eot = 90;
	Element obd_engine_state = 91;
	Element obd_protocol = 92;
	Element obd_intake_temperature = 93;
	Element obd_engine_load = 94;
	Element obd_short_term_fuel_trim1 = 95;
	Element obd_short_term_fuel_trim2 = 96;
	Element obd_commanded_equivalence_ratio = 97;
	Element obd_sot = 98;
	Element obd_sleep_voltage = 99;
	Element obd_pt = 100;
	Element obd_odometer = 101;
	Element obd_speed_calc_odometer = 102;
	Element obd_dtc_calc_odometer = 103;
	Element obd_distance_without_dtcs = 104;
	Element obd_debug = 105;

	// GPS (1360-1423)

	Element gps_fix_type = 1360;
	Element gps_mode = 1361;
	Element gps_standby = 1362;
	Element gps_gnss = 1363;
	Element gps_software_version = 1364;
	Element gps_upgrade_state = 1365;
	Element gps_debug = 1366;

	// Batch (1424-1439)

	// Accelerometer (1440-1503)

	Element acc_tow = 1440;
	Element acc_direction_recognized = 1441;
	Element acc_acceleration = 1442;
	Element acc_debug = 1443;

	message Element {
		oneof range_present {
			uint64 range = 1;
		}
		oneof frequency_present {
			uint32 frequency = 2;
		}
	}
}

message Settings {
	oneof obd_stop_start_time_present {
		uint32 obd_stop_start_time = 1;
	}
	oneof obd_vehicle_off_type_present {
		uint32 obd_vehicle_off_type = 2;
	}
	oneof obd_virtual_odometer_base_present {
		uint32 obd_virtual_odometer_base = 3;
	}
	oneof obd_wakeup_trigger_present {
		uint32 obd_wakeup_trigger = 4;
	}
}

message Commands {
	// Fields can't be nullable in proto3 (?) so they take byte(s) anyway!

	oneof core_software_reboot_present {
		bool core_software_reboot = 1;
	}
	oneof obd_clear_dtcs_present {
		bool obd_clear_dtcs = 2;
	}
}